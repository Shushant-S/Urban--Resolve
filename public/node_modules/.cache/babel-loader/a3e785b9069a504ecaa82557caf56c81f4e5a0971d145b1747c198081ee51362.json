{"ast":null,"code":"var _jsxFileName = \"C:\\\\Shushant\\\\Web D\\\\octahack\\\\src\\\\components\\\\News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./News.css\";\n// https://newsapi.org/v2/everything?q=pollutions&apikey=226cb84b76db43dcb0b55516711accb2\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction News() {\n  _s();\n  const [user, setUser] = useState([]);\n  let newsData = {\n    fetchNews: function () {\n      fetch(\"https://newsapi.org/v2/everything?q=pollutions&apikey=226cb84b76db43dcb0b55516711accb2\").then(response => {\n        if (!response.ok) {\n          throw new Error(\"No data found.\");\n        }\n        return response.json();\n      }).then(data => this.displayNews(data));\n      console.log(newsData);\n    },\n    displayNews: function (data) {\n      const {\n        name\n      } = data;\n      const {\n        icon,\n        description\n      } = data.weather[0];\n      const {\n        temp,\n        humidity\n      } = data.main;\n      const {\n        speed\n      } = data.wind;\n      document.querySelector(\".city\").innerText = \"Weather in \" + name;\n      document.querySelector(\".icon\").src = \"https://openweathermap.org/img/wn/\" + icon + \".png\";\n      document.querySelector(\".desc\").innerText = \"Feels like \" + description;\n      document.querySelector(\".temp\").innerText = temp + \"°C\";\n      document.querySelector(\".humidity\").innerText = \"Humidity: \" + humidity + \"%\";\n      document.querySelector(\".windSpeed\").innerText = \"Wind speed: \" + speed + \" km/h\";\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: articles.map(element => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: [\"console.log(elements);\", /*#__PURE__*/_jsxDEV(NewsItem, {\n              title: element.title ? element.title : \"\",\n              description: element.description ? element.description : \"\",\n              imageUrl: element.urlToImage,\n              newsUrl: element.url,\n              author: element.author,\n              date: element.publishedAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this)]\n          }, element.url, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(News, \"g26Pb/ecDi+x6k07CsgfguRqPQQ=\");\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","News","user","setUser","newsData","fetchNews","fetch","then","response","ok","Error","json","data","displayNews","console","log","name","icon","description","weather","temp","humidity","main","speed","wind","document","querySelector","innerText","src","fetchData","articles","map","element","title","urlToImage","url","author","publishedAt"],"sources":["C:/Shushant/Web D/octahack/src/components/News.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport \"./News.css\";\r\n// https://newsapi.org/v2/everything?q=pollutions&apikey=226cb84b76db43dcb0b55516711accb2\r\n\r\nfunction News() {\r\n\r\n  const [user, setUser] = useState([]);\r\n\r\n  let newsData = {\r\n\r\n    fetchNews: function () {\r\n      fetch(\"https://newsapi.org/v2/everything?q=pollutions&apikey=226cb84b76db43dcb0b55516711accb2\")\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\"No data found.\");\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((data) => this.displayNews(data));\r\n\r\n        console.log(newsData);\r\n    },\r\n    displayNews: function (data) {\r\n      const { name } = data;\r\n      const { icon, description } = data.weather[0];\r\n      const { temp, humidity } = data.main;\r\n      const { speed } = data.wind;\r\n      document.querySelector(\".city\").innerText = \"Weather in \" + name;\r\n      document.querySelector(\".icon\").src =\"https://openweathermap.org/img/wn/\" + icon + \".png\";\r\n      document.querySelector(\".desc\").innerText = \"Feels like \" + description;\r\n      document.querySelector(\".temp\").innerText = temp + \"°C\";\r\n      document.querySelector(\".humidity\").innerText =\r\n        \"Humidity: \" + humidity + \"%\";\r\n      document.querySelector(\".windSpeed\").innerText =\r\n        \"Wind speed: \" + speed + \" km/h\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  },[])\r\n\r\n\r\n  return (\r\n    <>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {articles.map((element) => {\r\n                            return <div className=\"col-md-4\" key={element.url} >\r\n                                console.log(elements);\r\n                                <NewsItem title={element.title ? element.title : \"\"} \r\n                                description={element.description ? element.description : \"\"} \r\n                                imageUrl={element.urlToImage} \r\n                                newsUrl={element.url} \r\n                                author={element.author} \r\n                                date={element.publishedAt} />\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default News;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,YAAY;AACnB;AAAA;AAAA;AAEA,SAASC,IAAI,GAAG;EAAA;EAEd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAEpC,IAAII,QAAQ,GAAG;IAEbC,SAAS,EAAE,YAAY;MACrBC,KAAK,CAAC,wFAAwF,CAAC,CAC5FC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;QACnC;QACA,OAAOF,QAAQ,CAACG,IAAI,EAAE;MACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK,IAAI,CAACC,WAAW,CAACD,IAAI,CAAC,CAAC;MAEvCE,OAAO,CAACC,GAAG,CAACX,QAAQ,CAAC;IACzB,CAAC;IACDS,WAAW,EAAE,UAAUD,IAAI,EAAE;MAC3B,MAAM;QAAEI;MAAK,CAAC,GAAGJ,IAAI;MACrB,MAAM;QAAEK,IAAI;QAAEC;MAAY,CAAC,GAAGN,IAAI,CAACO,OAAO,CAAC,CAAC,CAAC;MAC7C,MAAM;QAAEC,IAAI;QAAEC;MAAS,CAAC,GAAGT,IAAI,CAACU,IAAI;MACpC,MAAM;QAAEC;MAAM,CAAC,GAAGX,IAAI,CAACY,IAAI;MAC3BC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAACC,SAAS,GAAG,aAAa,GAAGX,IAAI;MAChES,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAACE,GAAG,GAAE,oCAAoC,GAAGX,IAAI,GAAG,MAAM;MACzFQ,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAACC,SAAS,GAAG,aAAa,GAAGT,WAAW;MACvEO,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC,CAACC,SAAS,GAAGP,IAAI,GAAG,IAAI;MACvDK,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC,CAACC,SAAS,GAC3C,YAAY,GAAGN,QAAQ,GAAG,GAAG;MAC/BI,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC,CAACC,SAAS,GAC5C,cAAc,GAAGJ,KAAK,GAAG,OAAO;IACpC;EACF,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACd8B,SAAS,EAAE;EACb,CAAC,EAAC,EAAE,CAAC;EAGL,oBACE;IAAA,uBACY;MAAK,SAAS,EAAC,WAAW;MAAA,uBACtB;QAAK,SAAS,EAAC,KAAK;QAAA,UACfC,QAAQ,CAACC,GAAG,CAAEC,OAAO,IAAK;UACvB,oBAAO;YAAK,SAAS,EAAC,UAAU;YAAA,WAAoB,wBAEhD,uBAAC,QAAQ;cAAC,KAAK,EAAEA,OAAO,CAACC,KAAK,GAAGD,OAAO,CAACC,KAAK,GAAG,EAAG;cACpD,WAAW,EAAED,OAAO,CAACd,WAAW,GAAGc,OAAO,CAACd,WAAW,GAAG,EAAG;cAC5D,QAAQ,EAAEc,OAAO,CAACE,UAAW;cAC7B,OAAO,EAAEF,OAAO,CAACG,GAAI;cACrB,MAAM,EAAEH,OAAO,CAACI,MAAO;cACvB,IAAI,EAAEJ,OAAO,CAACK;YAAY;cAAA;cAAA;cAAA;YAAA,QAAG;UAAA,GAPKL,OAAO,CAACG,GAAG;YAAA;YAAA;YAAA;UAAA,QAQ3C;QACV,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA;IACA;MAAA;MAAA;MAAA;IAAA;EACJ,iBACf;AAEP;AAAC,GA1DQlC,IAAI;AAAA,KAAJA,IAAI;AA4Db,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}